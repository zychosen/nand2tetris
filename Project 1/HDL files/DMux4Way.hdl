// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:

    DMux(in=in, sel=sel[1], a=x, b=y);
    DMux(in=x, sel=sel[0], a=a, b=b);
    DMux(in=y, sel=sel[0], a=c, b=d);

    /* Purely NAND
    Nand(a=sel[1], b=sel[1], out=A);
    Nand(a=sel[0], b=sel[0], out=B);

    Nand(a=A, b=B, out=x1);
    Nand(a=x1, b=x1, out=x1Comp);
    Nand(a=in, b=x1Comp, out=x2);
    Nand(a=x2, b=x2, out=a);

    Nand(a=A, b=sel[0], out=x3);
    Nand(a=x3, b=x3, out=x3Comp);
    Nand(a=in, b=x3Comp, out=x4);
    Nand(a=x4, b=x4, out=b);

    Nand(a=sel[1], b=B, out=x5);
    Nand(a=x5, b=x5, out=x5Comp);
    Nand(a=in, b=x5Comp, out=x6);
    Nand(a=x6, b=x6, out=c);

    Nand(a=sel[1], b=sel[0], out=x7);
    Nand(a=x7, b=x7, out=x7Comp);
    Nand(a=in, b=x7Comp, out=x8);
    Nand(a=x8, b=x8, out=d);
    */
}